---
- name: install openstack-nova packets
  yum: "name={{ item }} state=latest"
  with_items: [openstack-nova-api,openstack-nova-conductor,openstack-nova-console,openstack-nova-novncproxy,openstack-nova-scheduler,openstack-nova-placement-api]
  notify:
    - give /var/log/nova/nova-manage.log permision
- name: replace nova.conf to Populate databases
  template: "src=nova.conf.j2 dest=/etc/nova/nova.conf"
- name: Populate the nova* database
  shell:  su -s /bin/sh -c "nova-manage api_db sync" nova;su -s /bin/sh -c "nova-manage cell_v2 map_cell0" nova;su -s /bin/sh -c "nova-manage cell_v2 create_cell --name=cell1 --verbose" nova;su -s /bin/sh -c "nova-manage db sync" nova
#  notify:
#    - Populate the Compute databases
#    - give /var/log/nova/nova-manage.log permision
#    - Register the cell0 database
#    - Populate the nova-api database
#    - Create the cell1 cell
#    - restart nova-services with handlers

- name: ensure the nova-services is up
  service: "name={{ item }} state=restarted enabled=yes"
  with_items:
    - openstack-nova-api.service
    - openstack-nova-consoleauth.service
    - openstack-nova-scheduler.service
    - openstack-nova-conductor.service
    - openstack-nova-novncproxy.service
- name: copy /etc/httpd/conf.d/00-nova-placement-api.conf to controller node
  copy: src=00-nova-placement-api.conf dest=/etc/httpd/conf.d/00-nova-placement-api.conf owner=root group=root mode=640
- name: Restart the httpd service
  service: name=httpd state=restarted enabled=yes


#- name: Populate the Compute databases
#  shell: su -s /bin/sh -c "nova-manage api_db sync" nova;su -s /bin/sh -c "nova-manage db sync" nova
#  when: inventory_hostname == run_once_node 
#- name: replace nova.conf again to restart service
#  template: "src=nova.conf dest=/etc/nova/nova.conf"  
#  notify: restart nova service
